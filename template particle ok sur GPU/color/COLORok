#version 120


uniform mat4 MVP;

in vec3 position;
in vec3 color;
in vec3 velocity;
in vec3 gravity;
in float life;
in float fade;
out vec3 pos;
out vec3 vel;
out float outFade;
out float outLife;
uniform float time;


void main()
{

   vec3 pos1 = position;
  if(life > 0)
  {
    vel = velocity;


    pos.x += vel.x;
    pos.y += vel.y;
    pos.z += vel.z;


    vel.x += gravity.x;
    vel.y += gravity.y;
    vel.z += gravity.z;


    outLife -= fade;



}
  else
  {
    pos.x = 0.0;
    pos.y = 0.0;
    pos.z = 0.0;

    outLife = 2.0;

    //outFade = myRand(0.01,0.05);
    outFade = 0.03;

    //tabVelocities[i].x = 0.05*myRand(-1,1);
    //tabVelocities[i].y = 0.05; //myRand(-10.0,10.0);
    //tabVelocities[i].z = 0.05*myRand(-1,1);

    vel.x = 0.03;
    vel.y = 0.05;
    vel.z = 0.03;
  }

  pos1.y += 1;
  gl_PointSize = 5.0;
  gl_Position = MVP * vec4( pos1, 1.0f );

  gl_FrontColor = vec4( color, 1.0f );
}